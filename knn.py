# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KT4G8ASb-O8qHVRZFtDA8NnFTuVZz9_9
"""

# üß† K Nearest Neighbors (KNN) on Iris Dataset ‚Äî Underfitting Example

# Step 1Ô∏è‚É£: Import Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Step 2Ô∏è‚É£: Load Dataset
iris = load_iris()
X = iris.data
Y = iris.target

print("Dataset loaded successfully ‚úÖ")
print("Feature names:", iris.feature_names)
print("Target names:", iris.target_names)
print("Shape of X:", X.shape, "| Shape of Y:", Y.shape)

# Step 3Ô∏è‚É£: Visualize first two features
plt.figure(figsize=(8, 5))
plt.scatter(X[:, 0], X[:, 1], c=Y, cmap='viridis')
plt.title("Iris Dataset - Sepal Length vs Sepal Width")
plt.xlabel("Sepal Length (cm)")
plt.ylabel("Sepal Width (cm)")
plt.show()

# Step 4Ô∏è‚É£: Split Data
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.3, random_state=42)
print("Data split into training and test sets ‚úÖ")

# Step 5Ô∏è‚É£: Train a KNN Model (Underfitting setup)
# ‚ö†Ô∏è Large K value = Oversmoothing = Underfitting
knn = KNeighborsClassifier(n_neighbors=30)
knn.fit(X_train, y_train)
print("\nKNN model trained with k=30 (intentional underfit) ‚úÖ")

# Step 6Ô∏è‚É£: Predictions
y_pred = knn.predict(X_test)

# Step 7Ô∏è‚É£: Evaluation
print("\nüìä Model Evaluation:")
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred, target_names=iris.target_names))

# Step 8Ô∏è‚É£: Visualization of Test Predictions
plt.figure(figsize=(8, 5))
plt.scatter(X_test[:, 0], X_test[:, 1], c=y_pred, cmap='coolwarm', edgecolor='k')
plt.title("KNN (Underfit with k=100) Predictions ‚Äî 2D Projection")
plt.xlabel("Sepal Length (cm)")
plt.ylabel("Sepal Width (cm)")
plt.show()

print("\n‚ö†Ô∏è This model is intentionally underfit ‚Äî accuracy should be noticeably lower.")